{"ast":null,"code":"var _jsxFileName = \"/home/nate/Stellar/site/src/Header.js\";\nimport React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nconst useStyles = {\n  header: {\n    backgroundColor: 'black'\n    /*boxShadow: 'none'*/\n\n  },\n  headerName: {\n    color: 'white',\n    textDecoration: 'none'\n  },\n  link: {\n    padding: '0 10px',\n    fontSize: '18px',\n    color: 'white',\n    margin: '0px',\n    textDecoration: 'none',\n    textTransform: 'uppercase',\n    \"&:hover\": {\n      color: '#dedede',\n      textDecoration: 'none'\n    }\n  },\n  navCont: {\n    position: 'fixed',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  },\n  dropdown: {\n    display: 'inline-block',\n    position: 'relative',\n    \"&:hover $dropdownContent\": {\n      display: 'block'\n    }\n  },\n  dropdownContent: {\n    display: 'none',\n    position: 'absolute',\n    zIndex: '1',\n    backgroundColor: 'black',\n    paddingTop: '21px',\n    minWidth: '200px',\n    left: '50%',\n    marginLeft: '-100px'\n  },\n  dropdownLink: {\n    display: 'block',\n    textAlign: 'center',\n    padding: '16px 10px'\n  }\n};\nconst links = [{\n  name: \"About\",\n  link: \"/about\",\n  subs: []\n}, {\n  name: \"Engines\",\n  link: \"/engines\",\n  subs: [{\n    name: \"Sparrow\",\n    link: '/engines/sparrow'\n  }]\n}];\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(AppBar, {\n      className: this.props.classes.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: this.props.classes.headerName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Stellar Space Systems\")), /*#__PURE__*/React.createElement(\"nav\", {\n      className: this.props.classes.navCont,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, this.props.datalinks.map(({\n      name,\n      link,\n      subs\n    }) => {\n      if (subs.length < 1) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: link,\n          className: this.props.classes.link,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }\n        }, name);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: this.props.classes.dropdown,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: this.props.classes.link,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }\n        }, name), /*#__PURE__*/React.createElement(\"div\", {\n          className: this.props.classes.dropdownContent,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }\n        }, subs.map(({\n          name,\n          link\n        }) => {\n          return /*#__PURE__*/React.createElement(Link, {\n            to: link,\n            className: `${this.props.classes.link} ${this.props.classes.dropdownLink}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 27\n            }\n          }, name);\n        })));\n      }\n    }))));\n  }\n\n}\n\nexport default withStyles(useStyles)(Header);","map":{"version":3,"sources":["/home/nate/Stellar/site/src/Header.js"],"names":["React","AppBar","Toolbar","Typography","withStyles","Link","useStyles","header","backgroundColor","headerName","color","textDecoration","link","padding","fontSize","margin","textTransform","navCont","position","left","transform","dropdown","display","dropdownContent","zIndex","paddingTop","minWidth","marginLeft","dropdownLink","textAlign","links","name","subs","Header","Component","render","props","classes","datalinks","map","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {AppBar, Toolbar, Typography} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\nconst useStyles = ({\n  header: {\n    backgroundColor: 'black'\n    /*boxShadow: 'none'*/\n  },\n  headerName: {\n    color: 'white',\n    textDecoration: 'none'\n  },\n  link: {\n    padding: '0 10px',\n    fontSize: '18px',\n    color: 'white',\n    margin: '0px',\n    textDecoration: 'none',\n    textTransform: 'uppercase',\n    \"&:hover\": {\n      color: '#dedede',\n      textDecoration: 'none'\n    }\n  },\n  navCont: {\n    position: 'fixed',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  },\n  dropdown: {\n    display: 'inline-block',\n    position: 'relative',\n    \"&:hover $dropdownContent\": {\n      display: 'block'\n    }\n  },\n  dropdownContent: {\n    display: 'none',\n    position: 'absolute',\n    zIndex: '1',\n    backgroundColor: 'black',\n    paddingTop: '21px',\n    minWidth: '200px',\n    left: '50%',\n    marginLeft: '-100px'\n  },\n  dropdownLink: {\n    display: 'block',\n    textAlign: 'center',\n    padding: '16px 10px'\n  }\n});\n\nconst links = [\n  {\n    name: \"About\",\n    link: \"/about\",\n    subs: []\n  },\n  {\n    name: \"Engines\",\n    link: \"/engines\",\n    subs: [\n      {\n        name: \"Sparrow\",\n        link: '/engines/sparrow'\n      }\n    ]\n  }\n]\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <AppBar className={this.props.classes.header}>\n        <Toolbar>\n          <Link to='/' className={this.props.classes.headerName}>\n            <Typography variant='h6'>\n              Stellar Space Systems\n            </Typography>\n          </Link>\n          <nav className={this.props.classes.navCont}>\n            {this.props.datalinks.map(({name, link, subs}) => {\n              if (subs.length < 1) {\n                return (\n                  <Link to={link} className={this.props.classes.link}>\n                    {name}\n                  </Link>\n                )\n              }else{\n                return (\n                  <div className={this.props.classes.dropdown}>\n                    <a className={this.props.classes.link}>{name}</a>\n                    <div className={this.props.classes.dropdownContent}>\n                      {subs.map(({name, link}) => {\n                        return (\n                          <Link to={link} className={`${this.props.classes.link} ${this.props.classes.dropdownLink}`}>\n                            {name}\n                          </Link>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )\n              }\n            })}\n          </nav>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Header);\n"]},"metadata":{},"sourceType":"module"}