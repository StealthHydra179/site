{"version":3,"sources":["Header.js","Footer.js","pages/Home.js","pages/About.js","pages/Error.js","pages/Sparrow.js","App.js","serviceWorker.js","index.js"],"names":["links","name","link","subs","Header","AppBar","className","this","props","classes","header","Toolbar","to","headerName","Typography","variant","navCont","map","length","dropdown","dropdownContent","dropdownLink","React","Component","withStyles","backgroundColor","color","textDecoration","padding","fontSize","margin","textTransform","position","left","transform","display","zIndex","paddingTop","minWidth","marginLeft","textAlign","socials","icon","faYoutube","faDiscord","Footer","footer","copyright","Date","getFullYear","social","Link","naked","href","target","bottom","width","height","float","marginTop","marginRight","paddingLeft","Home","About","align","mainBody","maxWidth","Error","style","Sparrow","theme","createMuiTheme","typography","fontFamily","App","ThemeProvider","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.83d5e315.chunk.js","sourcesContent":["import React from 'react';\nimport {AppBar, Toolbar, Typography} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\nconst useStyles = ({\n  header: {\n    backgroundColor: 'black'\n    /*boxShadow: 'none'*/\n  },\n  headerName: {\n    color: 'white',\n    textDecoration: 'none'\n  },\n  link: {\n    padding: '0 10px',\n    fontSize: '18px',\n    color: 'white',\n    margin: '0px',\n    textDecoration: 'none',\n    textTransform: 'uppercase',\n    \"&:hover\": {\n      color: '#dedede',\n      textDecoration: 'none'\n    }\n  },\n  navCont: {\n    position: 'fixed',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  },\n  dropdown: {\n    display: 'inline-block',\n    position: 'relative',\n    \"&:hover $dropdownContent\": {\n      display: 'block'\n    }\n  },\n  dropdownContent: {\n    display: 'none',\n    position: 'absolute',\n    zIndex: '1',\n    backgroundColor: 'black',\n    paddingTop: '21px',\n    minWidth: '200px',\n    left: '50%',\n    marginLeft: '-100px'\n  },\n  dropdownLink: {\n    display: 'block',\n    textAlign: 'center',\n    padding: '16px 10px'\n  }\n});\n\nconst links = [\n  {\n    name: \"About\",\n    link: \"/about\",\n    subs: []\n  },\n  {\n    name: \"Engines\",\n    link: \"/engines\",\n    subs: [\n      {\n        name: \"Sparrow\",\n        link: '/engines/sparrow'\n      }\n    ]\n  }\n]\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <AppBar className={this.props.classes.header}>\n        <Toolbar>\n          <Link to='/' className={this.props.classes.headerName}>\n            <Typography variant='h6'>\n              Stellar Space Systems\n            </Typography>\n          </Link>\n          <nav className={this.props.classes.navCont}>\n            {links.map(({name, link, subs}) => {\n              if (subs.length < 1) {\n                return (\n                  <Link to={link} className={this.props.classes.link}>\n                    {name}\n                  </Link>\n                )\n              }else{\n                return (\n                  <div className={this.props.classes.dropdown}>\n                    <a className={this.props.classes.link}>{name}</a>\n                    <div className={this.props.classes.dropdownContent}>\n                      {subs.map(({name, link}) => {\n                        return (\n                          <Link to={link} className={`${this.props.classes.link} ${this.props.classes.dropdownLink}`}>\n                            {name}\n                          </Link>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )\n              }\n            })}\n          </nav>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Header);\n","import React from 'react';\nimport { Typography, Link } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDiscord, faYoutube } from '@fortawesome/free-brands-svg-icons'\n\nconst useStyles = ({\n  footer: {\n    position: 'absolute',\n    bottom: '0px',\n    backgroundColor: 'black',\n    color: 'white',\n    width: '100%',\n    height: '64px'\n  },\n  copyright: {\n    float: 'left',\n    marginLeft: '100px',\n    marginTop: '22px'\n  },\n  social: {\n    float: 'right',\n    marginRight: '100px',\n    marginTop: '20px'\n  },\n  icon: {\n    fontSize: '24px',\n    color: 'white',\n    paddingLeft: '10px',\n    \"&:hover\": {\n      color: '#dedede'\n    }\n  }\n});\n\nconst socials = [\n  {\n    link: \"https://www.youtube.com/channel/UCcDWszakBaLDEjaqmg8X-vg\",\n    icon: faYoutube\n  },\n  {\n    link: \"https://discord.gg/WhFJJyY\",\n    icon: faDiscord\n  }\n]\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div className={this.props.classes.footer}>\n        <div className={this.props.classes.copyright}>\n          <Typography variant=\"paragraph\">\n            &copy; {new Date().getFullYear()} Stellar Space Systems\n          </Typography>\n        </div>\n        <div className={this.props.classes.social}>\n          {socials.map(({link, icon}) => {\n            return (\n              <Link naked href={link} target=\"_blank\">\n                <FontAwesomeIcon icon={icon} className={this.props.classes.icon}/>\n              </Link>\n            )\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Footer);\n","import React from 'react';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <h1>Test</h1>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport {Typography} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = ({\n  mainBody: {\n    maxWidth: \"40%\",\n    margin: \"auto\"\n  }\n});\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h4\" align=\"center\">\n          About\n        </Typography>\n        <Typography variant=\"body1\" align=\"center\" className={this.props.classes.mainBody}>\n          Stellar Space Systems is dedicated to expanding in-space tranportation services. In the near future, many private space stations will grow in low-earth orbit and as in-space manufacturing grows, we will need a way to transport materials and products from station to station. We also provide components for those who want to build their own.\n        </Typography>\n        <Typography variant=\"h4\" align=\"center\">\n          The Team\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(About);\n","import React from 'react';\nimport { Typography } from '@material-ui/core'\n\nclass Error extends React.Component {\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h3\" align=\"center\" style={{marginTop: '300px'}}>\n          Page not Found\n        </Typography>\n      </div>\n    )\n  }\n}\n\nexport default Error;\n","import React from 'react';\nimport { Typography } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst useStyles = ({\n\n})\n\nclass Sparrow extends React.Component {\n  render() {\n    return (\n      <div>\n        <Typography variant=\"h4\" align=\"center\">\n          Sparrow\n        </Typography>\n        <Typography>\n          \n        </Typography>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(useStyles)(Sparrow);\n","import React from 'react';\nimport Header from './Header'\nimport Footer from './Footer'\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Error from './pages/Error'\nimport Sparrow from './pages/Sparrow'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"inherit\"\n  },\n})\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <Header />\n        <div style={{marginTop: '64px'}}>\n          <Switch>\n            <Route path='/' component={Home} exact />\n            <Route path='/about' component={About} />\n            <Route path='/engines/sparrow' component={Sparrow} />\n            <Route component={Error} />\n          </Switch>\n        </div>\n        <Footer />\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}